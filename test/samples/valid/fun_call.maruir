fun add(a: uint8, b: uint8): uint8
locals res: uint8;
{
    entry:
        res := a + b;
        return res;
}

fun mod(a: int16): int16 {
    entry:
        branch a < int16(0) negative non_negative;

    negative:
        a := -a;
        jump non_negative;

    non_negative:
        return a;
}

fun gauss(n: int32): int32
locals ctr: int32, sum: int32;
{
    entry:
        ctr := int32(0);
        sum := int32(0);
        jump header;

    header:
        branch ctr < n body exit;

    body:
        ctr := ctr + int32(1);
        sum := sum + ctr;
        jump header;

    exit:
        return sum;
    
}

fun noop() {}

fun main()
locals a: uint8, b: int16, c: int32;
{
    entry:
    a := call add(uint8(1), uint8(2));
    b := call mod(int16(-10));
    c := call gauss(int32(100));
    call noop();
    return;
}