fun main()
locals a: i16, b: i16, c: u8, e: bool;
{
    entry:
        c := 255_u8;
        c := c + 1_u8;
        assert(c == 0_u8);
        c := c - 1_u8;
        assert(c == 255_u8);

        b := 32767_i16;

        b := b + 1_i16;
        assert b == -32768_i16;

        b := -2_i16;
        a := 16384_i16;

        b := b * a;
        assert(b == -32768_i16);

        assert(b >> 2_i8 == -8192_i16);

        assert(b << 1_i8 == 0_i16);

        a := -3_i16;
        b := 3_i16;

        assert(a ** b == -27_i16);

        a := 125_i16;
        b := 7_i16;

        assert(a / b == 17_i16);

        assert !(1_u256 < 1_u256);
        assert 1_u256 <= 1_u256;
        assert 4_i32 < 5_i32;
        assert 7_u64 > 6_u64;
        assert 6_i64 >= 6_i64;
        assert !(5_i48 > 5_i48);

        assert (1_u256 == 1_u256);
        assert !(1_u256 == 2_u256);
        assert 1_u256 != 2_u256;
        assert !(2_i128 != 2_i128);

        a := 37_i16;
        b := 1024_i16;

        assert (a | b == 1061_i16);
        assert (a & b == 0_i16);
        assert (a ^ b == 1061_i16);

        b := 122_i16;

        assert (a | b == 127_i16);
        assert (a & b == 32_i16);
        assert (a ^ b == 95_i16);

        a := -5_i16;
        

        assert(-a == 5_i16);

        e := false;
        assert(!e);

        assert (true || false);
        assert (true || true);
        assert !(false || false);

        assert !(true && false);
        assert (true && true);
        assert !(false && false);
        return;
}
