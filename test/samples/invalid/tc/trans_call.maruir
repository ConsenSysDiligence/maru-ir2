fun add(a: u8, b: u8): u8
locals res: u8;
{
    entry:
        res := a + b;
        return res;
}

fun mod(a: i16): i16 {
    entry:
        branch a < i16(0) negative non_negative;

    negative:
        a := -a;
        jump non_negative;

    non_negative:
        return a;
}

fun gauss(n: i32): i32
locals ctr: i32, sum: i32;
{
    entry:
        ctr := i32(0);
        sum := i32(0);
        jump header;

    header:
        branch ctr < n body exit;

    body:
        ctr := ctr + i32(1);
        sum := sum + ctr;
        jump header;

    exit:
        return sum;
    
}

fun noop() {}

fun main()
locals a: u8, b: i16, c: i32, failed: bool;
{
    entry:
    a := trans_call add(u8(1), u8(2));
    b := trans_call mod(i16(-10));
    c := trans_call gauss(i32(100));
    call noop();
    return;
}
