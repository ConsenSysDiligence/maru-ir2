struct ArrWithLen<M; T> {
	arr: T[] *M;
	len: u256;
}

fun arrLen<M; T>(arg: ArrWithLen<M; T> *M): u256
locals res: u256;
{
	entry:
		load arg.len in res;
		return res;
}

fun arrIndex<M; T>(arg: ArrWithLen<M; T> *M, index: u256): T
locals arrPtr: T[] *M, res: T;
{
	entry:
		load arg.arr in arrPtr;
		load arrPtr[index] in res;

		return res;
}

fun main(ptr: ArrWithLen<#memory; u8> *#memory)
locals len: u256, val: u16;
{
	entry:

	len := call arrLen<#memory; u8>(ptr);
	val := call arrIndex<#memory; u8>(ptr, u256(0));
	return;
}
